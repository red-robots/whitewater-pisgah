$color_link: #3a80bc;
$color_link_visited: purple;
$color_link_hover: midnightblue;
$color_text_main: #404040;
$primary: #191919;
$secondary: #BA0C2F;
$gray: #F2F2F2;
$gray_dark: #707070;
$dark: #191919;
$red: #BA0D30;
$blue:#1A72BE;
$limegreen:#71C943;
$submenu_color: #191919;
$teal: #6FA2B6;

//$font_primary: 'Libre Franklin', sans-serif;
//$font_secondary: 'Poppins', sans-serif;
//$font_primary: 'Brandon', sans-serif;
$font_primary: 'Nunito Sans', sans-serif;
$font_secondary: 'Lato', sans-serif;
$font_third: 'Montserrat', sans-serif;
$font_code: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
$font_pre: "Courier 10 Pitch", Courier, monospace;

$portrait:480px;
$xswidth: 600px;
$tabwidth: 820px;
$midwidth: 960px;
$deskwidth: 1200px;
$xxl: 1300px;
$nav_width: 350px;

@mixin xxs { @media (min-width: $portrait) { @content; } }
@mixin xs { @media (min-width: $xswidth) { @content; } }
@mixin tab { @media (min-width: $tabwidth) { @content; } }
@mixin mid { @media (min-width: $midwidth) { @content; } }
@mixin desk {  @media (min-width: $deskwidth) { @content; } }
@mixin xxl {  @media (min-width: $xxl) { @content; } }

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
	clear: both;
	*zoom: 1;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}
@mixin flexbox(){
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
  }
  @mixin flexbox-flex($first, $second, $third) {
	-webkit-box-flex: $first $second $third;
	-moz-box-flex: $first $second $third;
	-webkit-flex: $first $second $third;
	-ms-flex: $first $second $third;
	flex: $first $second $third;
  }
  @mixin flexbox-wrap($value){
	-webkit-flex-wrap: $value;
	flex-wrap: $value;
  }
  @mixin flexbox-align-content($value){
	-webkit-align-content: $value;
	align-content: $value;
  }
  @mixin flexbox-align-items($value){
	-webkit-align-items: $value;
	align-items: $value;
  }
  @mixin flexbox-justify($value){
	-webkit-justify-content: $value;
	justify-content: $value;
  }
  @mixin flexbox-align-self($value){
	-webkit-align-self: $value;
	align-self: $value;
  }
  @mixin flexbox-direction($value){
	-webkit-flex-direction: $value;
	flex-direction: $value;
  }
  @mixin translatexy($value1,$value2){
	-ms-transform: translateX($value1) translateY($value2);
	-moz-transform: translateX($value1) translateY($value2);
	-webkit-transform: translateX($value1) translateY($value2);
	transform: translateX($value1) translateY($value2);
  }

@mixin flexgroup() {
	@include flexbox();
	@include flexbox-wrap(wrap);
	@include flexbox-direction(row);
}

@mixin flexgroup-center() {
	@include flexbox();
	@include flexbox-wrap(wrap);
	@include flexbox-direction(row);
	@include flexbox-align-items(center);
}

@mixin animateThis($duration:1s) {
	-webkit-animation-duration: $duration;
	animation-duration: $duration;
}

@mixin animateEffect($effect:fadeIn) {
	-webkit-animation-name: $effect;
  animation-name: $effect;
}

@mixin fontblock() {
	font-size: 16px;
	line-height: 1.5;
}

@mixin fontHeadingBlock($color:#FFF) {
	font-family: $font-secondary;
	font-size: 20px;
	font-weight: 500;
	line-height: 1.4;
	text-transform: uppercase;
	letter-spacing: 1px;
	margin: 0 0 20px;
	color: $color;
}

@mixin backgroundImage($position:center) {
	background-size: cover;
	background-position: $position;
	background-repeat: no-repeat;
}

@mixin custom_dashed() {
	background-image: url("data:image/svg+xml,%3csvg width='100%30' height='100%30' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%30' height='100%30' fill='none' stroke='%23333' stroke-width='3' stroke-dasharray='5%2c10' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");
}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}


